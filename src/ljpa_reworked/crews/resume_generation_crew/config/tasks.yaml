resume_generation_task:
  description: >
    Given data:

    The job title to match:
    {title}

    The detailed vacancy description and requirements
    {text}

    Contact person or methods what should be used to apply:
    {credentials}

    URL to the candidateâ€™s LinkedIn profile (optional)
    {linkedin_url} (optional): 

    Resume rating from Professional Resume reviewer, this number should be increased by following recommendations in summary:
    {rating}:

    Resume review from Professional Resume reviewer (summary), recommendations what should be improved in resume and how to do this:
    {summary}: 


    Based on provided data, Analyze the vacancy requirements and candidate's existing resume to create a comprehensive 
    and professional resume. If LinkedIn URL is provided, use scrape_tool to gather additional information to 
    enhance the resume quality.
    **CRITICAL INSTRUCTIONS:**
    - **PRIORITIZE VACANCY MATCHING:** Identify key requirements, skills, and qualifications from the vacancy and ensure they are prominently featured when present in candidate materials
    - **STRATEGIC CONTENT POSITIONING:** Reorder and emphasize experiences, skills, and achievements that directly address vacancy requirements
    - Do NOT create, invent, or fabricate any information not present in the source materials
    - Extract ALL relevant data from the provided resume and LinkedIn profile if available
    - **Create a compelling professional summary that distills the candidate's key qualifications, achievements, and value proposition into 2-3 concise sentences**
    - Maintain complete accuracy and professional integrity
    - Optimize presentation while preserving factual accuracy
    - Ensure the resume is perfectly tailored to the specific vacancy requirements
    - Focus on achievements and responsibilities that match vacancy requirements
    - Quantify accomplishments where possible
    - Present information in reverse chronological order for experience and education
    - **SKILLS ALIGNMENT:** Prioritize and group skills that match vacancy requirements, using similar terminology when possible
    - **EXPERIENCE OPTIMIZATION:** Highlight responsibilities and achievements that demonstrate competency in vacancy-required areas
      - **KEYWORD OPTIMIZATION:** Naturally incorporate relevant keywords from the vacancy throughout the resume

  expected_output: >
    A complete ResumeCrewAI object with the following structure:
    
    - personal_info: PersonalInfoCrewAI object containing:
      * name: string (max 100 chars) - candidate's full name
      * email: string (max 100 chars) - professional email address
      * phone: string (max 20 chars) - contact phone number
      * address: string (max 200 chars) - current address or location
    
    - summary: string (max 500 chars) - compelling 2-3 sentence summary highlighting key qualifications, achievements, and value proposition tailored to the vacancy**
    
    - education: List of EducationCrewAI objects, each containing:
      * course: string - degree/course name (e.g., "Bachelor of Computer Science") 
      * institution: string - university/school name
      * location: string - city, country of institution
      * start_date: string - when education started
      * end_date: string - when education ended or "Present" if ongoing
    
    - experience: List of ExperienceCrewAI objects, each containing:
      * title: string - job position title
      * company: string - employer company name
      * location: string - job location (city, country)
      * start_date: string - employment start date
      * end_date: string - employment end date or "Present" if current
      * description: list of strings - bullet points describing responsibilities and achievements
    
    - skills: List of SkillCrewAI objects, each containing:
      * title: string - skill category name (e.g., "Programming Languages", "Soft Skills")
      * elements: list of strings - individual skills within that category 
      ***avoid situation like this: PLC/SCADA/DCS: PLC, SCADA, DCS when title and skills are same. Make it better.
    
    - projects: List of ProjectCrewAI objects, each containing:
      * title: string - project name
      * description: string - detailed project description and technologies used
    
    - certifications: List of CertificationCrewAI objects, each containing:
      * title: string - certification name

  agent: resume_agent

resume_verification_task:
  description: >
    Verify the resume generated by the resume_generator_agent. 
    Cross-reference every field of the ResumeCrewAI object with the original PDF resume and LinkedIn profile information.
    Ensure that all information is accurate, correctly extracted, and not fabricated.
    **Verify that the professional summary accurately reflects the candidate's qualifications without adding fabricated achievements.**
    Correct any discrepancies, and output a final, verified ResumeCrewAI object.

    **CRITICAL INSTRUCTIONS:**
    - Your primary goal is to ensure 100% accuracy.
    - Do not add any new information.
    - Only correct information that was incorrectly transcribed from the source.
    - **Ensure the professional summary is factually accurate and based solely on source materials**
    - If the generated resume is accurate, return it as is.
    - For skills confirm that situation like this: PLC/SCADA/DCS: PLC, SCADA, DCS when title and skills are same is not in place. Make it better.
  expected_output: >
    A complete and verified ResumeCrewAI object with the same structure as the resume_generation_task.
  agent: resume_agent
  context:
    - resume_generation_task